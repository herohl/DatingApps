{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./account.service\";\nexport let MembersService = /*#__PURE__*/(() => {\n  class MembersService {\n    // userParams: UserParams;\n    constructor(http, accountService, memberService) {\n      this.http = http;\n      this.accountService = accountService;\n      this.memberService = memberService;\n      this.baseUrl = environment.apiUrl;\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n    }\n\n    ngOnInit() {\n      this.loadMember();\n    }\n\n    loadMember() {\n      this.memberService.getMember(this.user.username).subscribe(member => {\n        this.member = member;\n      });\n    } // tslint:disable-next-line: typedef\n\n\n    updateMember(member) {\n      return this.http.put(this.baseUrl + 'users', member).pipe(map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      }));\n    } // tslint:disable-next-line: typedef\n\n\n    getMembers() {\n      return this.http.get(this.baseUrl + 'users');\n    } // tslint:disable-next-line: typedef\n\n\n    getMember(username) {\n      return this.http.get(this.baseUrl + 'users/' + username);\n    }\n\n  }\n\n  MembersService.ɵfac = function MembersService_Factory(t) {\n    return new (t || MembersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AccountService), i0.ɵɵinject(MembersService));\n  };\n\n  MembersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MembersService,\n    factory: MembersService.ɵfac,\n    providedIn: 'root'\n  });\n  return MembersService;\n})();","map":null,"metadata":{},"sourceType":"module"}