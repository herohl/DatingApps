{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { PaginatedResult } from '../_models/pagination';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MembersService = /*#__PURE__*/(() => {\n  class MembersService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.members = [];\n      this.paginatedResult = new PaginatedResult();\n    } // tslint:disable-next-line: typedef\n\n\n    getMembers(userParams) {\n      return this.http.get(this.baseUrl + 'users', {\n        observe: 'response',\n        params\n      }).pipe(map(response => {\n        this.paginatedResult.result = response.body;\n\n        if (response.headers.get('Pagination') !== null) {\n          this.paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n        }\n\n        return this.paginatedResult;\n      }));\n    }\n\n    getPaginationHeaders(pageNumber, pageSize) {\n      let params = new HttpParams();\n\n      if (page !== null && itemsPerPage !== null) {\n        params = params.append('pageNumber', pageNumber.toString());\n        params = params.append('pageSize', pageSize.toString());\n      }\n    } // tslint:disable-next-line: typedef\n\n\n    getMember(username) {\n      const member = this.members.find(x => x.username === username);\n\n      if (member !== undefined) {\n        return of(member);\n      }\n\n      return this.http.get(this.baseUrl + 'users/' + username);\n    } // tslint:disable-next-line: typedef\n\n\n    updateMember(member) {\n      return this.http.put(this.baseUrl + 'users', member).pipe(map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      }));\n    } // tslint:disable-next-line: typedef\n\n\n    setMainPhoto(photoId) {\n      return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n    } // tslint:disable-next-line: typedef\n\n\n    deletePhoto(photoId) {\n      return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n    }\n\n  }\n\n  MembersService.ɵfac = function MembersService_Factory(t) {\n    return new (t || MembersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MembersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MembersService,\n    factory: MembersService.ɵfac,\n    providedIn: 'root'\n  });\n  return MembersService;\n})();","map":null,"metadata":{},"sourceType":"module"}